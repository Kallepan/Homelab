---
- name: Ensure the Talos working directory exists
  ansible.builtin.file:
    path: "{{ talos_cluster.working_dir }}"
    state: directory
    mode: "0755"

- name: Check if secrets file exists
  ansible.builtin.stat:
    path: "{{ talos_cluster.working_dir }}/secrets.yaml"
  register: secrets_file

- name: Generate Secrets for cluster
  when: "not secrets_file.stat.exists"
  ansible.builtin.command: >
    talosctl gen secrets --output-file {{ talos_cluster.working_dir }}/secrets.yaml
  changed_when: true

- name: Check if Config file exists
  ansible.builtin.stat:
    path: "{{ talos_cluster.working_dir }}/_out/talosconfig"
  register: config_file

- name: Generate Config for cluster
  when: "not config_file.stat.exists"
  ansible.builtin.command: >
    talosctl gen config --with-secrets {{ talos_cluster.working_dir }}/secrets.yaml --config-patch @{{ talos_cluster.working_dir }}/all.yaml {{ talos_cluster.name }} https://{{ talos_cluster.endpoint }}:6443 --output-dir {{ talos_cluster.working_dir }}/_out --install-image {{ talos_factory_image_url }} --force
  changed_when: true
  register: config_output

- name: Create control plane
  when: (talos_cluster.control_planes is defined and talos_cluster.control_planes | length > 0) and config_output.changed
  ansible.builtin.command: >
    talosctl apply-config --insecure --nodes {{ control_plane.ip }} --file {{ talos_cluster.working_dir }}/_out/controlplane.yaml
  loop: "{{ talos_cluster.control_planes }}"
  loop_control:
    loop_var: control_plane
  changed_when: true
  register: control_plane_output

- name: Apply IP to talosconfig
  when: control_plane_output.changed
  ansible.builtin.command: >
    talosctl --talosconfig {{ talos_cluster.working_dir }}/_out/talosconfig config endpoint {{ talos_cluster.control_planes[0].ip }}
  changed_when: true

- name: Apply Node to talosconfig
  when: control_plane_output.changed
  ansible.builtin.command: >
    talosctl --talosconfig {{ talos_cluster.working_dir }}/_out/talosconfig config node {{ talos_cluster.control_planes[0].ip }}
  changed_when: true

- name: Bootstrap the cluster
  when: control_plane_output.changed
  ansible.builtin.command: >
    talosctl --talosconfig {{ talos_cluster.working_dir }}/_out/talosconfig bootstrap
  register: bootstrap_result
  retries: 10
  delay: 30
  until: bootstrap_result.rc == 0
  changed_when: bootstrap_result.rc == 0

- name: Generate kubeconfig
  when: bootstrap_result.changed
  ansible.builtin.command: >
    talosctl --talosconfig {{ talos_cluster.working_dir }}/_out/talosconfig kubeconfig {{ talos_cluster.working_dir }}/_out/kubeconfig
  changed_when: true
