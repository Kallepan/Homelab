---
# I have created this Deployment in order to cover all of the use cases of opentelemetry in which only one instance for logs, metrics and traces is needed
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: otel-deployment
  namespace: observability
spec:
  interval: 1h
  chart:
    spec:
      chart: opentelemetry-collector
      version: "0.x"
      sourceRef:
        kind: HelmRepository
        name: open-telemetry
        namespace: observability
  install:
    crds: CreateReplace
  upgrade:
    crds: CreateReplace
  values:
    image:
      repository: otel/opentelemetry-collector-k8s

    mode: deployment
    replicaCount: 1

    presets:
      kubernetesEvents:
        enabled: true

    config:
      extensions:
        health_check:
          endpoint: ${env:MY_POD_IP}:13133

      receivers:
        k8sobjects:
          objects:
            - name: events
              mode: pull
              group: events.k8s.io
              interval: 1m

      processors:
        resource:
          attributes:
            - key: service.name
              value: "kube-events"
              action: upsert
        transform/events:
          error_mode: ignore
          log_statements:
            - context: log
              statements:
                # Maps the k8s.* attributes to the right Otel attribute
                - set(attributes["watch-type"], body["type"]) where IsMap(body) and body["type"] != nil

                - merge_maps(attributes, body, "upsert") where IsMap(body) and body["object"] == nil
                - merge_maps(attributes, body["object"], "upsert") where IsMap(body) and body["object"] != nil

                - merge_maps(attributes, attributes["metadata"], "upsert") where IsMap(attributes[ "metadata"])

                # Maps the name of the resource to the right k8s.* attribute
                - set(attributes["k8s.pod.name"], attributes["regarding"] ["name"]) where attributes["regarding"]["kind"] == "Pod"
                - set(attributes["k8s.node.name"], attributes["regarding"]["name"]) where attributes["regarding"]["kind"] == "Node"
                - set(attributes["k8s.job.name"], attributes["regarding"]["name"]) where attributes["regarding"]["kind"] == "Job"
                - set(attributes["k8s.cronjob.name"], attributes["regarding"]["name"]) where attributes["regarding"]["kind"] == "CronJob"
                - set(attributes["k8s.namespace.name"], attributes["regarding"]["namespace"]) where attributes["regarding"]["kind"] == "Pod" or attributes["regarding"]["kind"] == "Job" or attributes["regarding"]["kind"] == "CronJob"

                # Converts event types to Otel log Severities
                - set(severity_text, attributes["type"]) where attributes["type"] == "Normal" or attributes["type"] == "Warning"
                - set(severity_number, SEVERITY_NUMBER_INFO) where attributes["type"] == "Normal"
                - set(severity_number, SEVERITY_NUMBER_WARN) where attributes["type"] == "Warning"

      exporters:
        debug: {}
        otlphttp/logs:
          endpoint: http://loki-distributor.observability.svc.cluster.local:3100/otlp
          tls:
            insecure: true

      service:
        pipelines:
          logs:
            exporters:
              - otlphttp/logs
            processors:
              - transform/events
              - resource
            receivers:
              - k8sobjects
